apply from: "$rootDir/dependencies.gradle"

allprojects {
    buildscript {
        repositories {
            google()
            jcenter()

        }
        dependencies {
            classpath 'com.android.tools.build:gradle:3.5.3'
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        }
    }

    repositories {
        google()
        jcenter()

    }

    project.ext {

        buildToolsVersion = '28.0.3'
        minSdkVersion = 21
        targetSdkVersion = 28
        compileSdkVersion = 28

        kotlinVersion = '1.3.50'
        supportVersion = '1.0.0'
        coreKtxVersion = '1.0.2'
        constraintVersion = '1.1.3'
        fragmentVersion = '1.1.0-beta01'
        playCoreVersion = '1.6.1'
        ankoVersion = '0.10.5'
        widgetVersion = '1.1.0-alpha03'
        okhttpVersion = '3.11.0'
        retrofit2Version = '2.4.0'
        gsonVersion = '2.8.1'
        lifecycleVersion = '2.0.0'
        rxJavaVersion = '2.1.3'
        rxAndroidVersion = '2.1.1'
        glideVersion = '4.9.0'
        koinVersion = '2.0.0'
        roomVersion = '2.1.0-alpha06'
        timberVersion = '4.7.0'
        multidexVersion = '1.0.1'
        leakCanaryVersion = '1.5.4'
        mockitoVersion = '2.23.0'
        espressoVersion = '3.0.2'

        fileFilter = [
                '**/R.class',
                '**/R$*.class',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*Test*.*',
                'android/**/*.*',

                //Classes I intentionally don't want to test
                '**/*Activity.*',
                '**/*Fragment.*',
                '**/*BottomDialog.*',
                '**/*Dialog.*',
                '**/*Companion.*',
                '**/*Decoration.*',
                '**/Glide*.*',
                '**/GeneratedAppGlideModuleImpl.class',
                '**/BluekendiApp.class',
                '**/BaseBluekendiApp.class',
                '**/*Adapter.*',
                '**/*Holder.*',
                '**/*CryptoHeader.*',
                '**/*CryptoItem.*',
                '**/analytics/*.*',
                '**/base/*.*',
                '**/common/*.*',
                '**/custom/*.*',
                '**/deps/*.*',
                '**/deps/module/*.*',
                '**/service/*.*',
                '**/*$*$*.*',
        ]
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
        resolutionStrategy.force supportDependencies.support
        resolutionStrategy.force libraries.gson
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}